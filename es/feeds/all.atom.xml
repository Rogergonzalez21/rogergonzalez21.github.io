<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Roger Andrés González - rogerandresgonzalez.com.ve</title><link href="http://rogerandresgonzalez.com.ve/es/" rel="alternate"></link><link href="http://rogerandresgonzalez.com.ve/feeds/all.atom.xml" rel="self"></link><id>http://rogerandresgonzalez.com.ve/es/</id><updated>2016-02-09T16:10:00-05:30</updated><entry><title>¿Qué hacer en tus días libres o vacaciones?</title><link href="http://rogerandresgonzalez.com.ve/es/2016/02/que-hacer-en-tus-dias-libres-o-vacaciones/" rel="alternate"></link><updated>2016-02-09T16:10:00-05:30</updated><author><name>Roger González</name></author><id>tag:rogerandresgonzalez.com.ve,2016-02-09:es/2016/02/que-hacer-en-tus-dias-libres-o-vacaciones/</id><summary type="html">&lt;p&gt;Para algunos, la respuesta a esta pregunta es muy sencilla: &lt;strong&gt;¡DESCANSAR!&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Yo siempre suelo comparar el mundo de la informática con el mundo de la medicina. No porque si te equivocas vas a matar a una persona, sino que siempre tienes que estar actualizando tus conocimientos, porque el que se queda atrás lo aplasta una avalancha de nuevos lenguajes, nuevos frameworks y nuevas cositas cheveres. Por eso, aveces uso mis vacaciones para aprender algo nuevo.&lt;/p&gt;
&lt;div class="section" id="pero-que-puedo-aprender"&gt;
&lt;h2&gt;¿Pero qué puedo aprender?&lt;/h2&gt;
&lt;p&gt;¡Lo que sea! Desde cocina hasta programación. Como el objetivo de este blog es la tecnología, me voy a enfocar en ese punto.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="donde-puedo-aprender"&gt;
&lt;h2&gt;¿Donde puedo aprender?&lt;/h2&gt;
&lt;p&gt;Afortunadamente, en el mundo de la tecnología, esto no es muy difícil de conseguir. Aquí hay algunos sitios:&lt;/p&gt;
&lt;div class="section" id="codeacademy"&gt;
&lt;h3&gt;&lt;a class="reference external" href="https://www.codecademy.com/"&gt;CodeAcademy&lt;/a&gt;&lt;/h3&gt;
&lt;div class="figure"&gt;
&lt;img alt="CodeAcademy" src="http://rogerandresgonzalez.com.ve/es/../images/que_hacer_en_vacaciones/codeacademy.jpg" /&gt;
&lt;/div&gt;
&lt;p&gt;Mi sitio preferido para aprender programación. Tiene muchos tutoriales y todos son gratuitos. Las clases son en una especie de IDE que corre directamente en el navegador, con las instrucciones del lado izquierdo. Cuenta con foros, Q&amp;amp;A y otros recursos para no quedarte trancado en algún problema.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="CodeAcademy ide" src="http://rogerandresgonzalez.com.ve/es/../images/que_hacer_en_vacaciones/codeacademy2.png" /&gt;
&lt;/div&gt;
&lt;p&gt;Aquí hay &lt;strong&gt;infinidad de clases&lt;/strong&gt; y lo mejor de todo, es &lt;strong&gt;completamente gratis&lt;/strong&gt;. Aquí aprendí JavaScript y Python. ¡Solo tienes que crear una cuenta y empezar a aprender!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="codeschool"&gt;
&lt;h3&gt;&lt;a class="reference external" href="https://www.codeschool.com/"&gt;CodeSchool&lt;/a&gt;&lt;/h3&gt;
&lt;div class="figure"&gt;
&lt;img alt="CodeSchool" src="http://rogerandresgonzalez.com.ve/es/../images/que_hacer_en_vacaciones/codeschool.png" /&gt;
&lt;/div&gt;
&lt;p&gt;CodeSchool es un poco mas personalizado. Las clases empiezan con un video explicando lo que se va a hacer (un MUY buen video), y luego una serie de 'challenges' o 'retos' que debes cumplir, con los conocimientos adquiridos del video. Al igual que CodeAcademy, tiene su propio IDE desde el navegador, Q&amp;amp;A y foros.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="CodeSchool ide" src="http://rogerandresgonzalez.com.ve/es/../images/que_hacer_en_vacaciones/codeschool2.png" /&gt;
&lt;/div&gt;
&lt;p&gt;En CodeSchool, &lt;strong&gt;no todos los cursos son gratuitos&lt;/strong&gt;. A decir verdad, muy pocos son gratuitos. Yo hice el &lt;a class="reference external" href="https://www.codeschool.com/courses/try-jquery"&gt;curso básico de jQuery&lt;/a&gt;, pero el avanzado es pago.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="en-conclusion"&gt;
&lt;h2&gt;En conclusión&lt;/h2&gt;
&lt;p&gt;En CodeAcademy todo es gratuito, pero las clases podrían ser un poco más interactivas. CodeSchool es pago, pero sus clases son muy interactivas y, a mi parecer, vale la pena la inversión (si tienes la posibilidad).&lt;/p&gt;
&lt;p&gt;En mis vacaciones de Carnaval, yo voy a hacer el &lt;a class="reference external" href="https://www.codeschool.com/courses/shaping-up-with-angular-js"&gt;curso de Angular.js de CodeSchool&lt;/a&gt; (¡Gratis!). ¿Tu qué vas a hacer?&lt;/p&gt;
&lt;/div&gt;
</summary><category term="cursos"></category></entry><entry><title>¿Cómo hacer un PDF con Python y HTML?</title><link href="http://rogerandresgonzalez.com.ve/es/2015/12/como-hacer-un-pdf-con-python-y-html/" rel="alternate"></link><updated>2015-12-21T16:10:00-05:30</updated><author><name>Roger González</name></author><id>tag:rogerandresgonzalez.com.ve,2015-12-21:es/2015/12/como-hacer-un-pdf-con-python-y-html/</id><summary type="html">&lt;p&gt;¿Alguna vez has tenido que hacer un reporte por medio de un PDF en tu aplicación de Python? Aquí puedes aprender como hacerlo, usando &lt;strong&gt;xhtml2pdf&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="section" id="que-es-xhtml2pdf"&gt;
&lt;h2&gt;¿Qué es xhtml2pdf?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;xhtml2pdf&lt;/strong&gt; es un paquete que nos permite la creación de PDF's utilizando HTML. &lt;a class="reference external" href="https://github.com/xhtml2pdf/xhtml2pdf/blob/master/doc/usage.rst"&gt;Aquí&lt;/a&gt; pueden encontrar la documentación completa.&lt;/p&gt;
&lt;div class="section" id="instalacion"&gt;
&lt;h3&gt;Instalación&lt;/h3&gt;
&lt;p&gt;Primero, necesitamos instalar los paquetes necesarios. En el terminal, colocamos:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install python-dev libjpeg-dev zlib1g-dev virtualenv
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ya que tenemos todo instalado, creamos una nueva virtualenv y la activamos.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;virtualenv env
&lt;span class="o"&gt;(&lt;/span&gt;Se crea la virtualenv&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source &lt;/span&gt;env/bin/activate
&lt;span class="o"&gt;(&lt;/span&gt;env&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Como siempre, para desactivar la virtualenv, &lt;code&gt;deactivate&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Ya que estamos en nuestra virtualenv, instalamos desde pip:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;(&lt;/span&gt;env&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$ &lt;/span&gt;pip install xhtml2pdf jinja2
&lt;span class="o"&gt;(&lt;/span&gt;Se instalan los paquetes&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;¡Y eso es todo! Ya podemos empezar a crear nuestro primer PDF.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="creando-nuestro-primer-pdf"&gt;
&lt;h2&gt;Creando nuestro primer PDF&lt;/h2&gt;
&lt;p&gt;Por lo general, hay 3 formas de crear PDF's con xhtml2PDF:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Con un HTML estático&lt;/li&gt;
&lt;li&gt;Con un HTML dinámico&lt;/li&gt;
&lt;li&gt;Con un framework web (Django, Flask, Pyramid, etc.)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="con-un-html-estatico"&gt;
&lt;h3&gt;Con un HTML estático&lt;/h3&gt;
&lt;p&gt;Si solo necesitamos generar un reporte de un HTML estático, solo necesitamos lo siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;xhtml2pdf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pisa&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="n"&gt;base_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abspath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="n"&gt;sourceHtml&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;base_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;ruta/a/nuestro/HTML&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;outputFilename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;test.pdf&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;convertHtmlToPdf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sourceHtml&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;outputFilename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;resultFile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;outputFilename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;w+b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;pisaStatus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pisa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CreatePDF&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;sourceHtml&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;resultFile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;resultFile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;pisaStatus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;pisa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showLogging&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;convertHtmlToPdf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sourceHtml&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;outputFilename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Iré explicando poco a poco.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Importamos &lt;code&gt;pisa&lt;/code&gt; (para renderizar los PDF) y &lt;code&gt;os&lt;/code&gt; (para ubicar nuestro archivo HTML).&lt;/li&gt;
&lt;li&gt;Usamos &lt;code&gt;os&lt;/code&gt; para leer nuestro archivo HTML y le asignamos un nombre a nuestro resultado en PDF.&lt;/li&gt;
&lt;li&gt;Creamos una función llamada &lt;code&gt;convertHtmlToPdf&lt;/code&gt;, la cual recibe el HTML a renderizar y el nombre del PDF que estamos generando.&lt;/li&gt;
&lt;li&gt;En la función, creamos el archivo y renderizamos el PDF con &lt;code&gt;pisa.CreatePDF()&lt;/code&gt;, definiendo nuestro HTML y el archivo PDF creado.&lt;/li&gt;
&lt;li&gt;Por último, cerramos el archivo, devolvemos los errores (en caso de existir errores) y corremos el &lt;code&gt;main&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Bastante sencillo. Podemos tener un HTML como este:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hola mundo!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
    tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
    quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo
    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse
    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non
    proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Y nos devolvería exactamente lo mismo, pero en un PDF.&lt;/p&gt;
&lt;p&gt;El problema de esta solución, es que no es automático. Si tenemos un script que genere cierto contenido, tendríamos que modificar el HTML a mano para crear nuestro PDF. Por eso vamos a la segunda forma de crear un PDF&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="con-un-html-dinamico"&gt;
&lt;h3&gt;Con un HTML dinámico&lt;/h3&gt;
&lt;p&gt;Para hacer uso de un HTML dinámico, vamos a cargar nuestros templates con &lt;a class="reference external" href="http://jinja.pocoo.org/docs/dev/"&gt;jinja2&lt;/a&gt;, el compilador de HTML de Django.&lt;/p&gt;
&lt;p&gt;Para eso, modificamos un poco nuestro script original:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;xhtml2pdf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pisa&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;jinja2&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Template&lt;/span&gt; &lt;span class="c"&gt;#Nuevo!&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="n"&gt;base_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abspath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="n"&gt;sourceHtml&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;base_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;ruta/a/nuestro/HTML&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;outputFilename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;test.pdf&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;name&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;roger&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;lastname&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;gonzalez&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c"&gt;#Nuevo!&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;convertHtmlToPdf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sourceHtml&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;outputFilename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="c"&gt;#Nuevo!&lt;/span&gt;
    &lt;span class="n"&gt;resultFile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;outputFilename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;w+b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;base_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sourceHtml&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c"&gt;#Nuevo!&lt;/span&gt;
    &lt;span class="n"&gt;html&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;#Nuevo!&lt;/span&gt;

    &lt;span class="n"&gt;pisaStatus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pisa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CreatePDF&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;resultFile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;resultFile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;pisaStatus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;pisa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;showLogging&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;convertHtmlToPdf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sourceHtml&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;outputFilename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;¿Qué hacen las lineas nuevas?&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Importamos &lt;code&gt;Template&lt;/code&gt;, que nos permitirá renderizar automáticamente los HTML.&lt;/li&gt;
&lt;li&gt;Creamos un nuevo diccionario y lo añadimos a la función. jinja2 usa diccionarios para renderizar los datos en HTML.&lt;/li&gt;
&lt;li&gt;Usamos &lt;code&gt;Template&lt;/code&gt; para abrir nuestro HTML y posteriormente renderizarlo con nuestro diccionario &lt;code&gt;data&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Lo mejor de este método es que no es necesario estar pendiente de los HTML. Solo debes hacer una base y utilizar el poderoso sintaxis de jinja2.&lt;/p&gt;
&lt;p&gt;Puedes tener este HTML:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hola mundo!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;{{ name }} {{ lastname }}&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;El cual devolvería este PDF:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="hola-mundo"&gt;
&lt;h3&gt;Hola mundo!&lt;/h3&gt;
&lt;p&gt;roger gonzalez&lt;/p&gt;
&lt;p&gt;Este es el método que más uso, cuando necesito que un script me devuelva un PDF para &lt;a class="reference external" href="http://rogerandresgonzalez.com.ve/es/2015/10/enviar-un-mail-con-mailx/"&gt;mandarlo por correo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Por último, pero no menos importante, el método de framework web.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="con-un-html-de-un-framework-web"&gt;
&lt;h3&gt;Con un HTML de un framework web&lt;/h3&gt;
&lt;p&gt;Este método es muy parecido al anterior, a excepción del uso de link callbacks para convertir los URIs de los HTML a rutas absolutas. Para este ejemplo, estoy usando Django.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.http&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.template&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Context&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.template.loader&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;get_template&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;xhtml2pdf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pisa&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;link_callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rel&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="n"&gt;sUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STATIC_URL&lt;/span&gt;      &lt;span class="c"&gt;# Typically /static/&lt;/span&gt;
    &lt;span class="n"&gt;sRoot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STATIC_ROOT&lt;/span&gt;    &lt;span class="c"&gt;# Typically /home/userX/project_static/&lt;/span&gt;
    &lt;span class="n"&gt;mUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MEDIA_URL&lt;/span&gt;       &lt;span class="c"&gt;# Typically /static/media/&lt;/span&gt;
    &lt;span class="n"&gt;mRoot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MEDIA_ROOT&lt;/span&gt;     &lt;span class="c"&gt;# Typically /home/userX/project_static/media/&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;uri&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mUrl&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mRoot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;uri&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;uri&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sUrl&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sRoot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;uri&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;uri&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isfile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s"&gt;&amp;#39;media URI must start with &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; or &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mUrl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;generate_pdf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;today&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;farmer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Old MacDonald&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;animals&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Cow&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Moo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Goat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Baa&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Pig&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Oink&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

    &lt;span class="n"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;lyrics/oldmacdonald.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MEDIA_ROOT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;test.pdf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;w+b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pisaStatus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pisa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CreatePDF&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;link_callback&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;link_callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seek&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pdf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mimetype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;application/pdf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Más de lo mismo, lo único que cambia es que al final devuelve el PDF por medio de un &lt;code&gt;HttpResponse&lt;/code&gt; de Django.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="eso-es-todo"&gt;
&lt;h2&gt;¡Eso es todo!&lt;/h2&gt;
&lt;p&gt;Con este tutorial corto, pero informativo, pudimos aprender como usar xhtml2pdf para generar un reporte en PDF utilizando un HTML como base. Pero eso no es todo. xhtml2pdf tiene algunas limitaciones a la hora de renderizar HTML. Puedes conocerlas todas revisando la &lt;a class="reference external" href="https://github.com/xhtml2pdf/xhtml2pdf/blob/master/doc/usage.rst"&gt;documentación&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;¡Hasta la próxima!&lt;/p&gt;
&lt;/div&gt;
</summary><category term="python"></category><category term="pdf"></category><category term="reportes"></category></entry><entry><title>Certificaciones de Google por el Gobierno de España. Conoce el proyecto "Actívate"</title><link href="http://rogerandresgonzalez.com.ve/es/2015/11/proyecto-activate/" rel="alternate"></link><updated>2015-11-26T15:40:00-05:30</updated><author><name>Roger González</name></author><id>tag:rogerandresgonzalez.com.ve,2015-11-26:es/2015/11/proyecto-activate/</id><summary type="html">&lt;p&gt;¿Quieres tener un certificado gratuito reconocido por Google? El proyecto &amp;quot;Actívate&amp;quot; se trata de esto y un poco más.&lt;/p&gt;
&lt;div class="section" id="que-es-activate"&gt;
&lt;h2&gt;¿Qué es Actívate?&lt;/h2&gt;
&lt;img alt="Activate" src="http://rogerandresgonzalez.com.ve/es/../images/activate/activate.png" /&gt;
&lt;p&gt;Actívate es una iniciativa de &lt;strong&gt;Google&lt;/strong&gt;, el &lt;strong&gt;Ministerio de Industria, Energía y Turismo&lt;/strong&gt; de España y &lt;a class="reference external" href="http://www.google.es/landing/activate/colaboradores/"&gt;muchas universidades&lt;/a&gt;, para incentivar a la gente a aprender cosas nuevas en el área de tecnología. El proyecto empezó en &lt;strong&gt;Enero de 2015&lt;/strong&gt;, pero salió para el público -no español- en Octubre.&lt;/p&gt;
&lt;p&gt;Activate ofrece diversos cursos, que son 100% reconocidos por Google, y más importante, son completamente &lt;strong&gt;gratis&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;La lista de cursos, el registro y su descripción, la puedes conseguir aquí, pero igualmente te enumero los cursos:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://cursos.formacionactivate.es/marketing-digital"&gt;Marketing Digital&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://cursos.formacionactivate.es/apps-moviles"&gt;Desarrollo de Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://cursos.formacionactivate.es/analitica-web"&gt;Analítica de Datos (Google Analytics)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://cursos.formacionactivate.es/comercio-electronico"&gt;Comercio Electrónico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://cursos.formacionactivate.es/cloud-computing"&gt;Cloud Computing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://aemprende.unimooc.com/student/itineraries/activate"&gt;Emprendimiento&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://cursos.formacionactivate.es/productividad-personal"&gt;Productividad Propia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://formacionactivate.appspot.com/idesweb-parte-1/"&gt;Desarrollo Web (I)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="y-que-necesito-para-hacer-estos-cursos"&gt;
&lt;h2&gt;¿Y qué necesito para hacer estos cursos?&lt;/h2&gt;
&lt;p&gt;¡Sólo necesitas tu cuenta de Google y estás listo! ¿Qué esperas para aprovechar esta gran oportunidad que te ofrece Google con el Gobierno de España?&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://drive.google.com/file/d/0B4KegKrQMPnoM3Z1eGo4eDdMNXc/view?usp=sharing"&gt;Yo hice el curso de Analítica web&lt;/a&gt; y lo recomiendo ampliamente.&lt;/p&gt;
&lt;p&gt;Espero que puedas aprovechar estos recursos.&lt;/p&gt;
&lt;p&gt;Hasta la próxima.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="educación"></category><category term="certificacion"></category><category term="google"></category><category term="actívate"></category></entry><entry><title>¿Cómo hacer un deploy de una aplicación de Django a Openshift?</title><link href="http://rogerandresgonzalez.com.ve/es/2015/11/deploy-django-a-openshift/" rel="alternate"></link><updated>2015-11-26T13:40:00-05:30</updated><author><name>Roger González</name></author><id>tag:rogerandresgonzalez.com.ve,2015-11-26:es/2015/11/deploy-django-a-openshift/</id><summary type="html">&lt;p&gt;Algo muy importante luego de que haces tu aplicación en Django es hacer el deploy. ¿Como van a usar tu aplicación &lt;strong&gt;si no se puede llegar a ella&lt;/strong&gt;?.&lt;/p&gt;
&lt;p&gt;Aquí llega Red Hat al rescate con su servicio &lt;a class="reference external" href="https://es.wikipedia.org/wiki/Computaci%C3%B3n_en_la_nube#Plataforma_como_servicio_"&gt;PaaS&lt;/a&gt;, &lt;a class="reference external" href="https://openshift.redhat.com/"&gt;OpenShift&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="que-es-openshift-eso-con-que-se-come"&gt;
&lt;h2&gt;¿Qué es OpenShift? ¿Eso con qué se come?&lt;/h2&gt;
&lt;p&gt;OpenShift es el servicio de &amp;quot;Plataforma-como-servicio&amp;quot; de Red Hat. Simple, ¿no?. Lo más importante que tiene OpenShift es que con su cuenta gratuita &lt;strong&gt;se pueden tener hasta 3 aplicaciones en vivo&lt;/strong&gt;, incluso con &lt;strong&gt;dominios propios&lt;/strong&gt;, características que lo convierten en una de las mejores opciones para hacer deploy de aplicaciones web.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ya-cree-mi-cuenta-en-openshift-ahora-que"&gt;
&lt;h2&gt;Ya creé mi cuenta en OpenShift, ¿Ahora qué?&lt;/h2&gt;
&lt;p&gt;Primero, tienes que &lt;a class="reference external" href="https://developers.openshift.com/en/getting-started-overview.html"&gt;configurar tu cuenta&lt;/a&gt;. Si no configuras tu cuenta, no podrás acceder a tus aplicaciones
via Git.&lt;/p&gt;
&lt;p&gt;Luego, desde tu panel de control debes &lt;strong&gt;crear tu primera aplicación&lt;/strong&gt;.&lt;/p&gt;
&lt;img alt="Añadir aplicación" src="http://rogerandresgonzalez.com.ve/es/../images/deploy_django/add_aplication.png" /&gt;
&lt;p&gt;Para efectos de este tutorial, vamos a crear una aplicación de Python 2.7.&lt;/p&gt;
&lt;img alt="Python 2.7" src="http://rogerandresgonzalez.com.ve/es/../images/deploy_django/python_2.7.png" /&gt;
&lt;p&gt;Llenamos toda la información que nos pide, y luego esperamos a que nos lleve al panel de control de la aplicación.
Una vez en el panel de control, añadimos el cartucho de MySQL y el de PHPMyAdmin (opcional).&lt;/p&gt;
&lt;p&gt;¡Ahora podemos clonar nuestro repositorio en OpenShift vía Git! En la parte derecha del panel de control
nos dice &amp;quot;Source code&amp;quot;. Ese es el link de nuestro repositorio, al que podemos acceder con &amp;quot;git clone&amp;quot; desde el terminal.&lt;/p&gt;
&lt;p&gt;Voy a asumir que ya tienes Git instalado y usas Ubuntu.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;user@pc:~/&lt;span class="nv"&gt;$ &lt;/span&gt;git clone el-link-de-tu-repositorio-aqui repo
user@pc:~/&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;repo
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Si haces &lt;code&gt;ls&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;tuProyecto/
    +---wsgi.py
    +---setup.py
    *---.openshift/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Allí vas a pegar toda tu aplicación (si tienes una), o vas a crear una nueva.&lt;/p&gt;
&lt;p&gt;Ahora viene lo básico. Crear tu virtualenv, activarlo, instalar las dependencias desde tu requirements.txt,
etc, etc, etc...&lt;/p&gt;
&lt;p&gt;Luego de que hagas todo esto, coloca esto en tu terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;user@pc:~/repo&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir wsgi
user@pc:~/repo&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir wsgi/static
user@pc:~/repo&lt;span class="nv"&gt;$ &lt;/span&gt;touch wsgi/static/.gitkeep
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Esto lo usaremos más adelante, es bueno tenerlo listo.&lt;/p&gt;
&lt;p&gt;Si has seguido todos los pasos correctamente, deberías tener el siguiente esquema de proyecto:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;tuProyecto/
+---wsgi/
&lt;span class="p"&gt;|&lt;/span&gt;   +---static/
&lt;span class="p"&gt;|&lt;/span&gt;       +---.gitkeep
+---wsgi.py
+---setup.py
+---.openshift/
+---tuProyectoDjango/
&lt;span class="p"&gt;|&lt;/span&gt;   +----__init__.py
&lt;span class="p"&gt;|&lt;/span&gt;   +----urls.py
&lt;span class="p"&gt;|&lt;/span&gt;   +----settings.py
&lt;span class="p"&gt;|&lt;/span&gt;   +----wsgi.py
+---+tuAppDjango/
    +----__init__.py
    +----models.py
    +----views.py
    +----tests.py
    +----migrations
         +---__init__.py
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="ya-el-proyecto-esta-configurado-empecemos-con-el-wsgi"&gt;
&lt;h3&gt;Ya el proyecto está configurado. Empecemos con el &lt;a class="reference external" href="http://python.org.ar/wiki/WSGI"&gt;wsgi&lt;/a&gt;.&lt;/h3&gt;
&lt;p&gt;Primero, debes editar el activho wsgi.py que vino directamente del repositorio de OpenShift con lo siguiente:&lt;/p&gt;
&lt;p&gt;¡No olvides de reemplazar &lt;strong&gt;'tuProyectoDjango'&lt;/strong&gt; con el nombre de tu proyecto!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="n"&gt;virtenv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;OPENSHIFT_PYTHON_DIR&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;/virtenv/&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;virtualenv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;virtenv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;bin/activate_this.py&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;execfile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;virtualenv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__file__&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;virtualenv&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;IOError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tuProyectoDjango.wsgi&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;application&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Crea un archivo que se llame &amp;quot;build&amp;quot; (así, sin extensión), añade los siguientes scripts y guardalos en &lt;code&gt;.openshift/action_hooks&lt;/code&gt;. Estos van a ser ejecutados cada vez que se haga el deployment de la aplicación.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c"&gt;#this is .openshift/action/hooks/build&lt;/span&gt;
&lt;span class="c"&gt;#remember to make it +x so openshift can run it.&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -d &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;OPENSHIFT_DATA_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;media &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    mkdir -p &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;OPENSHIFT_DATA_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;media
&lt;span class="k"&gt;fi&lt;/span&gt;
ln -snf &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;OPENSHIFT_DATA_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;media &lt;span class="nv"&gt;$OPENSHIFT_REPO_DIR&lt;/span&gt;/wsgi/static/media

&lt;span class="c"&gt;######################### end of file&lt;/span&gt;

&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c"&gt;#this one is the deploy hook .openshift/action_hooks/deploy&lt;/span&gt;
&lt;span class="nb"&gt;source&lt;/span&gt; &lt;span class="nv"&gt;$OPENSHIFT_HOMEDIR&lt;/span&gt;/python/virtenv/bin/activate
&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$OPENSHIFT_REPO_DIR&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Executing &amp;#39;python manage.py migrate&amp;#39;&amp;quot;&lt;/span&gt;
python manage.py migrate
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Executing &amp;#39;python manage.py collectstatic --noinput&amp;#39;&amp;quot;&lt;/span&gt;
python manage.py collectstatic --noinput

&lt;span class="c"&gt;########################### end of file&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;El primero crea la carpeta de &amp;quot;media&amp;quot; en el root del proyecto de OpenShift si esta no existe y crea un enlace simbólico a la ruta &lt;code&gt;/wsgi/static/media&lt;/code&gt; (recuerdan cuando creamos &lt;code&gt;/wsgi/static/&lt;/code&gt;?).&lt;/p&gt;
&lt;p&gt;El segundo, activa la virtualenv en OpenShift, ejecuta las migraciones y el &lt;a class="reference external" href="https://docs.djangoproject.com/en/1.8/ref/contrib/staticfiles/#collectstatic"&gt;collectstatic&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Debes añadir el atributo &lt;code&gt;+x&lt;/code&gt; a &lt;code&gt;.openshift/action_hooks/build&lt;/code&gt;, por lo que tienes que ejecutar lo siguiente en el terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;user@pc:~/repo&lt;span class="nv"&gt;$ &lt;/span&gt;chmod +x .openshift/action_hooks/build
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Esto lo vuelve un archivo ejecutable.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="seguimos-con-las-modificaciones-en-settings"&gt;
&lt;h3&gt;Seguimos con las modificaciones en 'settings'&lt;/h3&gt;
&lt;p&gt;Ya que el wsgi y los hooks están listos, tienes que modificar tu archivo 'settings' para que apunte en donde estan tus archivos 'static', 'media' y 'template':&lt;/p&gt;
&lt;p&gt;Todas estas configuraciones están hechas para correr en los sitios predeterminados. Si hiciste algún cambio, refléjalo en tus settings.&lt;/p&gt;
&lt;p&gt;¡Recuerda reemplazar &lt;strong&gt;'tuAppDjango'&lt;/strong&gt; con el nombre de tu app!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;STATIC_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;/static/&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;MEDIA_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;/media/&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;STATIC_ROOT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BASE_DIR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;wsgi&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;static&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;MEDIA_ROOT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BASE_DIR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;wsgi&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;static&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;media&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;STATICFILES_DIRS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BASE_DIR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;tuAppDjango&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;static&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;
&lt;span class="n"&gt;TEMPLATE_DIRS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BASE_DIR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;tuAppDjango&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;templates&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Para finalizar, tienes que reconocer si estás en OpenShift o no, para que use tu base de datos local o la del servidor.&lt;/p&gt;
&lt;p&gt;En tu archivo settings.py, debes agregar:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="n"&gt;BASE_DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c"&gt;# Agregar esto!&lt;/span&gt;
&lt;span class="n"&gt;ON_OPENSHIFT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;OPENSHIFT_REPO_DIR&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;ON_OPENSHIFT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="c"&gt;# Fin&lt;/span&gt;

&lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="c"&gt;# Database&lt;/span&gt;
&lt;span class="c"&gt;# https://docs.djangoproject.com/en/1.7/ref/settings/#databases&lt;/span&gt;
&lt;span class="c"&gt;# Agregar esto!&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;ON_OPENSHIFT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;DEBUG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
    &lt;span class="n"&gt;TEMPLATE_DEBUG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
    &lt;span class="n"&gt;ALLOWED_HOSTS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;DATABASES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;ENGINE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;django.db.backends.mysql&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;NAME&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;tu-base-de-datos-OpenShift&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;USER&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;OPENSHIFT_MYSQL_DB_USERNAME&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;PASSWORD&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;OPENSHIFT_MYSQL_DB_PASSWORD&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;HOST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;OPENSHIFT_MYSQL_DB_HOST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;PORT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;OPENSHIFT_MYSQL_DB_PORT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;DEBUG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
    &lt;span class="n"&gt;TEMPLATE_DEBUG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
    &lt;span class="n"&gt;ALLOWED_HOSTS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="n"&gt;DATABASES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;ENGINE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;django.db.backends.sqlite3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;NAME&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BASE_DIR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;db.sqlite3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;# Fin&lt;/span&gt;

&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;¡Recuerda reemplazar &lt;strong&gt;'tu-base-de-datos-OpenShift'&lt;/strong&gt; con el nombre de la base de datos MySQL que te dió OpenShift!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="y-listo"&gt;
&lt;h2&gt;¡Y listo!&lt;/h2&gt;
&lt;p&gt;Ya todo debería de estar funcionando. en tu terminal escribe:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;user@pc:~/repo&lt;span class="nv"&gt;$ &lt;/span&gt;git status
&lt;span class="c"&gt;# Muestra todos los archivos que se van a agregar al commit&lt;/span&gt;

user@pc:~/repo&lt;span class="nv"&gt;$ &lt;/span&gt;git add .
user@pc:~/repo&lt;span class="nv"&gt;$ &lt;/span&gt;git commit -m &lt;span class="s2"&gt;&amp;quot;Initial commit&amp;quot;&lt;/span&gt;
user@pc:~/repo&lt;span class="nv"&gt;$ &lt;/span&gt;git push
&lt;span class="c"&gt;# Por ahí se nos va la app!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Luego que termine el deployment de tu app, si visitas la URL deberías ver tu app corriendo sin ningún problema. Aveces me gusta revisar que la base de datos hizo bien las migraciones. Para eso usas PHPMyAdmin. Si no lo agregaste al comienzo del tutorial, puedes agregar el cartucho ahora.&lt;/p&gt;
&lt;p&gt;Espero que hayas podido hacer tu deployment sin problema, y cualquier cosa, ¡No dudes en contactarme!.&lt;/p&gt;
&lt;p&gt;Especiales agradecimientos al usuario &lt;a class="reference external" href="http://stackoverflow.com/users/1105249/luis-masuelli"&gt;Luis Masuelli&lt;/a&gt; de Stack-Overflow, que hizo &lt;a class="reference external" href="http://stackoverflow.com/questions/26871381/deploying-a-local-django-app-using-openshift/26874375#26874375"&gt;este maravilloso aporte&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Hasta la próxima.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://rogerandresgonzalez.com.ve/es/2015/10/como-configurar-tu-primer-proyecto-de-django-parte-I/"&gt;Parte 1: Preparando nuestro proyecto de Django&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://rogerandresgonzalez.com.ve/es/2015/11/como-configurar-tu-primer-proyecto-de-django-parte-II/"&gt;Parte 2: Aplicación, Vistas, Modelos, Templates y URLS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://rogerandresgonzalez.com.ve/es/2015/11/como-configurar-tu-primer-proyecto-de-django-parte-III/"&gt;Parte 3: Django Admin y Formularios&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary><category term="deploy"></category><category term="django"></category><category term="openshift"></category><category term="python"></category><category term="tutorial"></category></entry><entry><title>¿Cómo configurar tu primer proyecto de Django? Parte III</title><link href="http://rogerandresgonzalez.com.ve/es/2015/11/como-configurar-tu-primer-proyecto-de-django-parte-III/" rel="alternate"></link><updated>2015-11-24T15:31:00-05:30</updated><author><name>Roger González</name></author><id>tag:rogerandresgonzalez.com.ve,2015-11-24:es/2015/11/como-configurar-tu-primer-proyecto-de-django-parte-III/</id><summary type="html">&lt;p&gt;Siguiendo desde el &lt;a class="reference external" href="http://rogerandresgonzalez.com.ve/es/2015/11/como-configurar-tu-primer-proyecto-de-django-parte-II/"&gt;último tutorial&lt;/a&gt;, hoy vamos a usar el Django Admin y vamos a hacer nuestro primer formulario.&lt;/p&gt;
&lt;div class="section" id="que-es-el-django-admin"&gt;
&lt;h2&gt;¿Qué es el Django admin?&lt;/h2&gt;
&lt;p&gt;El &lt;a class="reference external" href="https://docs.djangoproject.com/en/1.8/ref/contrib/admin/"&gt;Django admin&lt;/a&gt; es uno de los mejores elementos que tiene Django para el desarrollo web. Django automáticamente trae una interfaz de administrador, que lee tus modelos y te da opciones para añadir, editar y eliminar registros en tu base de datos. ¿Bastante útil, no?.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="como-accedo-al-django-admin"&gt;
&lt;h2&gt;¿Cómo accedo al Django admin?&lt;/h2&gt;
&lt;p&gt;Con nuestra &lt;strong&gt;aplicación corriendo&lt;/strong&gt;, vamos al navegador a la dirección &lt;code&gt;localhost:8000/admin&lt;/code&gt;, y vamos a conseguir esto:&lt;/p&gt;
&lt;img alt="django admin" src="http://rogerandresgonzalez.com.ve/es/../images/django_tutorial/django-admin-login.png" /&gt;
&lt;p&gt;Para entrar, usamos los datos del superusuario, que creamos en el tutorial anterior. Al entrar, nos conseguimos con el panel de administración de Django, pero con un problema: &lt;strong&gt;no hay modelos para editar&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Para registrar tus modelos, tienes que añadir lo siguiente en &lt;code&gt;app_test/admin.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;admin&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;app_test.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt;

&lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Si actualizamos en el navegador, veremos nuestro modelo listo para añadir, editar o eliminar registros.&lt;/p&gt;
&lt;img alt="django admin model registration" src="http://rogerandresgonzalez.com.ve/es/../images/django_tutorial/django-admin-model-registration.png" /&gt;
&lt;p&gt;Si hacemos click en &amp;quot;Add&amp;quot; en el apartado de &amp;quot;Persons&amp;quot;, podemos añadir a una persona.&lt;/p&gt;
&lt;img alt="django admin model registration" src="http://rogerandresgonzalez.com.ve/es/../images/django_tutorial/django-admin-add-person.png" /&gt;
&lt;p&gt;Finalmente, si volvemos a &lt;code&gt;localhost:8000/index&lt;/code&gt;, vamos a ver a nuestra persona recientemente creada.&lt;/p&gt;
&lt;img alt="primera persona" src="http://rogerandresgonzalez.com.ve/es/../images/django_tutorial/first-person.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="pero-espera-esto-no-es-para-nada-practico"&gt;
&lt;h2&gt;Pero espera, esto no es para nada práctico&lt;/h2&gt;
&lt;p&gt;En lo más mínimo esto es práctico. Si estamos haciendo una aplicación para el público, es imposible pedirle a cada persona que la quiera usar que entre en el panel de administración para registrarse. Entonces, ¿Qué usamos para añadir nuevos registros a la base de datos? Claro que si, campeon. Un formulario.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="creando-nuestro-primer-formulario"&gt;
&lt;h2&gt;Creando nuestro primer formulario&lt;/h2&gt;
&lt;p&gt;Primero, tenemos que crear el archivo &lt;code&gt;app_test/forms.py&lt;/code&gt;. Allí, vamos a colocar lo siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;app_test.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PersonForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelForm&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Nombre&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EmailField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Correo electrónico&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;phone_num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Teléfono&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Dirección&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt;
        &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;phone_num&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;address&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Voy a explicar paso a paso lo que está pasando.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Primero hacemos los imports. Importamos &lt;code&gt;forms&lt;/code&gt; y nuestro modelo, &lt;code&gt;Person&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Creamos una clase llamada &amp;quot;PersonForm&amp;quot; que hereda de &lt;code&gt;forms.ModelForm&lt;/code&gt;. En Django, los formularios son Clases.&lt;/li&gt;
&lt;li&gt;Creamos cada uno de los campos, exactamente como en los modelos, pero esta vez viniendo de &amp;quot;Forms&amp;quot;.&lt;/li&gt;
&lt;li&gt;Usamos la subclase &lt;code&gt;Meta&lt;/code&gt; para definir que estamos usando un modelo, y cuáles de los campos vamos a llenar.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;¡Y listo! Ya tenemos nuestro formulario listo, y podemos usarlo en nuestras vistas.&lt;/p&gt;
&lt;p&gt;En &lt;code&gt;app_test/views.py&lt;/code&gt;, creamos la siguiente vista:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.shortcuts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;app_test.forms&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;PersonForm&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="c"&gt;# ...&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;addPerson&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PersonForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errors&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PersonForm&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;add_person.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;form&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;En esta vista:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Importamos &lt;code&gt;redirect&lt;/code&gt;, para manejar las redirecciones de las vistas.&lt;/li&gt;
&lt;li&gt;Creamos la vista &lt;code&gt;addPerson&lt;/code&gt;, que va a manejar nuestro formulario.&lt;/li&gt;
&lt;li&gt;En la vista, chequeamos si se hizo una petición POST (si no sabes lo que es POST o las peticiones HTTP, puedes leerlo &lt;a class="reference external" href="https://es.wikipedia.org/wiki/Hypertext_Transfer_Protocol#M.C3.A9todos_de_petici.C3.B3n"&gt;aquí&lt;/a&gt;).&lt;ul&gt;
&lt;li&gt;Si es un POST, chequea si el formulario es válido. Si es válido, guarda en la base de datos y redirecciona a &lt;code&gt;index&lt;/code&gt;, de lo contrario, devuelve los errores del formulario.&lt;/li&gt;
&lt;li&gt;Si no es POST, entonces devuelve el formulario vacío.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Seguidamente, creamos el template que muestre el formulario. En &lt;code&gt;app_test/templates/add_person.html&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Añadir personas&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Añadir personas&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;post&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            {% csrf_token %}
            {{ form.as_p }}
            &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Guardar&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{% url &amp;#39;index&amp;#39; %}&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Volver&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Aquí hacemos uso del sistema de templates de Django, &lt;a class="reference external" href="http://jinja.pocoo.org/docs/dev/"&gt;Jinja2&lt;/a&gt;. Con &lt;code&gt;{% url 'index' %}&lt;/code&gt;, nos aseguramos que siempre ese link se dirija al URL con nombre &lt;code&gt;index&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Finalmente, colocamos la nueva URL que lleva hacia la vista. En &lt;code&gt;app_test/urls.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# ...&lt;/span&gt;

&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;patterns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;^index$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;^index/addPerson/$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addPerson&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;addPerson&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="c"&gt;# &amp;lt;--- Agregar esta linea!&lt;/span&gt;

&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Si vamos a &lt;code&gt;localhost:8000/index/addPerson&lt;/code&gt;, podemos ver nuestro formulario funcionando sin problemas. Si lo llenamos con datos y hacemos click en &amp;quot;Guardar&amp;quot;, volveremos a la página principal y podremos ver nuestro nuevo registro.&lt;/p&gt;
&lt;img alt="form" src="http://rogerandresgonzalez.com.ve/es/../images/django_tutorial/form1.png" /&gt;
&lt;img alt="form2" src="http://rogerandresgonzalez.com.ve/es/../images/django_tutorial/form2.png" /&gt;
&lt;p&gt;Para un mejor flujo, añadimos un link a &amp;quot;Añadir personas&amp;quot; desde la página principal. En &lt;code&gt;app_test/templates/index.html&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="c"&gt;&amp;lt;!--Justo despues del cierre de la tabla--&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{% url &amp;#39;addPerson&amp;#39; %}&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Añadir persona&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="y-eso-es-todo"&gt;
&lt;h2&gt;¡Y eso es todo!&lt;/h2&gt;
&lt;p&gt;Ahora tu proyecto debe verse &lt;a class="reference external" href="https://github.com/Rogergonzalez21/django-tutorial/tree/bc9346efde23714d360e1170c18268535ed98871"&gt;así&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Aún falta mucho por cubrir, pero no hay tanto tiempo. Aún se le podría agregar &lt;a class="reference external" href="https://docs.djangoproject.com/en/1.8/howto/static-files/"&gt;archivos estáticos&lt;/a&gt;, como hojas de estilo CSS, o scripts en JavaScript, y muchísimas otras cosas mas. Recuerda que el objetivo principal de este tutorial es demostrar lo sencillo que es crear una aplicación con Django.&lt;/p&gt;
&lt;p&gt;En un próximo post, haré un tutorial para hacer deploy de tu aplicación de Django en OpenShift.&lt;/p&gt;
&lt;p&gt;¡Hasta la próxima!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://rogerandresgonzalez.com.ve/es/2015/10/como-configurar-tu-primer-proyecto-de-django-parte-I/"&gt;Parte 1: Preparando nuestro proyecto de Django&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://rogerandresgonzalez.com.ve/es/2015/11/como-configurar-tu-primer-proyecto-de-django-parte-II/"&gt;Parte 2: Aplicación, Vistas, Modelos, Templates y URLS&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary><category term="django"></category><category term="python"></category></entry><entry><title>Música que debes escuchar: Y/O de Charliepapa</title><link href="http://rogerandresgonzalez.com.ve/es/2015/11/musica-que-debes-escuchar-yo-charliepapa/" rel="alternate"></link><updated>2015-11-18T11:06:00-05:30</updated><author><name>Roger González</name></author><id>tag:rogerandresgonzalez.com.ve,2015-11-18:es/2015/11/musica-que-debes-escuchar-yo-charliepapa/</id><summary type="html">&lt;p&gt;¡Hola! Hoy vengo con un post menos... ¿Nerd? A mi me encanta la música desde que soy muy pequeño. Rock clásico, psicodélico, pesado... Desde hace unos cuantos años, he querido actualizarme un poco con la música Venezolana. La Vida Boheme, Rawayana, Viniloversus, Tomates Fritos, entre otros. Recientemente, un disco llamó mi atención, y es del que vengo a hablar hoy.&lt;/p&gt;
&lt;div class="section" id="y-o-de-charliepapa"&gt;
&lt;h2&gt;Y/O de Charliepapa&lt;/h2&gt;
&lt;div class="figure"&gt;
&lt;img alt="Portada Y/O" src="http://rogerandresgonzalez.com.ve/es/../images/musica_que_debes_escuchar/y-o.jpg" /&gt;
&lt;/div&gt;
&lt;p&gt;Para ser sincero, nunca había escuchado de Charliepapa antes, hasta que ví un post de facebook de un amigo. El post era del video de &amp;quot;Merlina&amp;quot;, y el comentario que el hacia era &amp;quot;Miren, chandelier criollo&amp;quot;. Yo había visto el video de &lt;a class="reference external" href="https://www.youtube.com/watch?v=2vjPBrBU-TM"&gt;Chandelier de Sia&lt;/a&gt;, y me llamó la atención este &amp;quot;Chandelier criollo&amp;quot;. El video no tiene desperdicio.&lt;/p&gt;
&lt;div class="youtube youtube-16x9"&gt;&lt;iframe src="https://www.youtube.com/embed/OtMb8fi7jok" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;Todo me encantó. El video, la música, la actriz, TODO. Eso me llamó la atención y me motivó a buscar más sobre ellos. Cuando entré en su &lt;a class="reference external" href="https://soundcloud.com/charliepapa"&gt;Soundcloud&lt;/a&gt;, conseguí que el &lt;a class="reference external" href="https://soundcloud.com/charliepapa/sets/y-o"&gt;disco Y/O está público en su cuenta&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="la-musica"&gt;
&lt;h2&gt;La música&lt;/h2&gt;
&lt;p&gt;Oh Dios mío, la música. Muy autóctona (la banda es de Mérida), pero con un tono actual que no se puede negar. Nada de &lt;a class="reference external" href="https://www.youtube.com/watch?v=693m7iCh-TE"&gt;Wendy Sulca y su tetita&lt;/a&gt;. Una ejecución musical excelente. Emocionantes cuando deben serlo, lentos cuando deben serlo.&lt;/p&gt;
&lt;p&gt;La primera canción del disco te atrapa y no te deja ir hasta que el disco termine.&lt;/p&gt;
&lt;div class="youtube youtube-16x9"&gt;&lt;iframe src="https://www.youtube.com/embed/_qizouzowa0" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;Y el video, ni que hablar. Te hace sentir como si estuvieras allí, viendo esos paisajes hermosos de Mérida.&lt;/p&gt;
&lt;p&gt;Mi canción preferida del disco es &lt;strong&gt;Merlina&lt;/strong&gt;, aunque &lt;strong&gt;[BIS]&lt;/strong&gt;, &lt;strong&gt;Envolvente&lt;/strong&gt; y &lt;strong&gt;Afra&lt;/strong&gt; también son muy buenas.&lt;/p&gt;
&lt;p&gt;Realmente este disco demuestra que en Venezuela hay bandas muy buenas, que quizá no sean tan conocidas e internacionales como La Vida Boheme, Viniloversus o Los Amigos Invisibles, pero pueden ser más fáciles de ver en vivo que Foo Fighters o Artic Monkeys.&lt;/p&gt;
&lt;p&gt;Así que, ¡A apoyar el talento Venezolano!&lt;/p&gt;
&lt;p&gt;Puedes escuchar el disco completo desde aquí, pero deberías de ir a su &lt;a class="reference external" href="https://soundcloud.com/charliepapa"&gt;Soundcloud&lt;/a&gt; y escuchar todos sus discos.&lt;/p&gt;
&lt;iframe width="100%" height="450" scrolling="no" frameborder="no" src="https://w.soundcloud.com/player/?visual=true&amp;url=https%3A%2F%2Fapi.soundcloud.com%2Fplaylists%2F117591400&amp;show_artwork=true"&gt;&lt;/iframe&gt;&lt;/div&gt;
</summary><category term="música que debes escuchar"></category><category term="charliepapa"></category><category term="rock nacional"></category></entry><entry><title>¿Cómo configurar tu primer proyecto de Django? Parte II</title><link href="http://rogerandresgonzalez.com.ve/es/2015/11/como-configurar-tu-primer-proyecto-de-django-parte-II/" rel="alternate"></link><updated>2015-11-10T19:08:00-05:30</updated><author><name>Roger González</name></author><id>tag:rogerandresgonzalez.com.ve,2015-11-10:es/2015/11/como-configurar-tu-primer-proyecto-de-django-parte-II/</id><summary type="html">&lt;p&gt;Continuando el &lt;a class="reference external" href="http://rogerandresgonzalez.com.ve/es/2015/10/como-configurar-tu-primer-proyecto-de-django-parte-I/"&gt;último tutorial&lt;/a&gt;, ya tenemos nuestro proyecto de Django completamente funcional, pero aún nos falta crear nuestra primera &lt;strong&gt;aplicación&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Nota: El motivo de este tutorial &lt;strong&gt;no&lt;/strong&gt; es crear una aplicación, sino aprender lo básico para hacer una aplicación con Django&lt;/p&gt;
&lt;div class="section" id="pense-que-eso-es-lo-que-ya-teniamos-que-esta-pasando"&gt;
&lt;h2&gt;Pensé que eso es lo que ya teníamos, ¿Qué está pasando?&lt;/h2&gt;
&lt;p&gt;Una 'aplicación' de Django no es lo mismo que un 'proyecto' de Django. ¿Por qué? Un proyecto es donde viven tus aplicaciones. En un proyecto puedes tener 'n' aplicaciones, ordenadas y funcionando de forma conjunta. Eso no quiere decir que una aplicación no funcione en otro proyecto, todo lo contrario. El proyecto solo se encarga de mantener tu/tus aplicacion/es ordenada/s y en un mismo sitio.&lt;/p&gt;
&lt;p&gt;Para iniciar tu primera aplicación, debes estar en la carpeta del proyecto (donde está &lt;code&gt;manage.py&lt;/code&gt;), y teclear lo siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;(&lt;/span&gt;env&lt;span class="o"&gt;)&lt;/span&gt;user@pc:~/proyecto/tests&lt;span class="nv"&gt;$ &lt;/span&gt;python manage.py startapp app_test
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Esto dará inicio a la aplicación &amp;quot;app_test&amp;quot;. si accedemos y hacemos &lt;code&gt;ls&lt;/code&gt;, nos va a mostrar su contenido.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;(&lt;/span&gt;env&lt;span class="o"&gt;)&lt;/span&gt;user@pc:~/proyecto/tests&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;app_test
&lt;span class="o"&gt;(&lt;/span&gt;env&lt;span class="o"&gt;)&lt;/span&gt;../app_test&lt;span class="nv"&gt;$ &lt;/span&gt;ls

admin.py
__init__.py
migrations/
models.py
tests.py
views.py
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Vamos a ir viendo para que funciona cada uno de los archivos.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;code&gt;admin.py&lt;/code&gt;: Aquí se registran todos los modelos que serán manejados desde el &lt;a class="reference external" href="https://docs.djangoproject.com/en/1.8/ref/contrib/admin/"&gt;administrador de Django&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;migrations/&lt;/code&gt;: El directorio donde se guardan las migraciones de la base de datos. Por lo general eso no se toca.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;models.py&lt;/code&gt;: En este archivo se escriben todos los modelos que van en nuestra aplicación. Si has trabajado antes con SQL, este es el &amp;quot;esquema de base de datos&amp;quot;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tests.py&lt;/code&gt;: Para hacer los tests unitarios.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;views.py&lt;/code&gt;: Aquí van cada una de las vistas de tu aplicación web, eso quiere decir, la lógica de cada pantalla que el usuario va a ver.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ya que sabemos que hace cada uno de los archivos, vamos a 'instalar' nuestra nueva aplicación en el proyecto. En nuestro archivo &lt;code&gt;tests/settings.py&lt;/code&gt; agregamos lo siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;django.contrib.admin&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;...&amp;#39;&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;app_test&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c"&gt;# &amp;lt;----- Añadir nuestra aplicación al final&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ya que nuestra aplicación está correctamente instalada, podemos empezar a hacer &lt;strong&gt;modelos&lt;/strong&gt;, &lt;strong&gt;vistas&lt;/strong&gt; y &lt;strong&gt;rutas&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="modelos"&gt;
&lt;h2&gt;Modelos&lt;/h2&gt;
&lt;p&gt;Los &lt;a class="reference external" href="https://docs.djangoproject.com/en/stable/topics/db/models/"&gt;modelos&lt;/a&gt; son los encargados de crear y mantener nuestra base de datos, independientemente de que motor de base de datos estemos utilizando (MySQL, SQLServer, PostgreSQL, etc.), lo que nos permite cambiar de motor de forma muy rápida.&lt;/p&gt;
&lt;p&gt;Para hacer un modelo básico:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;phone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EmailField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__unicode__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Como podemos observar, hay diferentes tipos de campos en nuestro modelo. En el ejemplo solo usamos &lt;code&gt;CharField&lt;/code&gt; y &lt;code&gt;EmailField&lt;/code&gt; pero hay muchos mas. Siempre tenemos que asegurarnos que estamos usando el correcto. En &lt;a class="reference external" href="https://docs.djangoproject.com/en/1.8/ref/models/fields/#model-field-types"&gt;esta lista&lt;/a&gt; podemos revisar todos los tipos de fields que tiene Django por defecto.&lt;/p&gt;
&lt;p&gt;En Django también podemos establecer &lt;strong&gt;relaciones&lt;/strong&gt; entre los modelos (como en las tablas de bases de datos).&lt;/p&gt;
&lt;p&gt;Para saber más sobre modelos de Django, te recomiendo &lt;a class="reference external" href="https://docs.djangoproject.com/en/stable/topics/db/models/"&gt;esta guia&lt;/a&gt; (en inglés).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="vistas"&gt;
&lt;h2&gt;Vistas&lt;/h2&gt;
&lt;p&gt;Las &lt;a class="reference external" href="https://docs.djangoproject.com/en/1.8/topics/http/views/"&gt;vistas&lt;/a&gt; son las que procesan toda la lógica de lo que sucede cuando el usuario interactúa con la página web. Por ejemplo, el envío de un formulario, la petición de una lista, la edición de una serie de datos, etc.&lt;/p&gt;
&lt;p&gt;Una vista básica sería la siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.http&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Hola mundo!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Esta vista solo nos va a devolver &amp;quot;Hola Mundo!&amp;quot;, que quizá no sea lo más interesante del mundo. Vamos a realizar una vista un poco más completa.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.shortcuts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;app_test.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;persons&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;index.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;persons&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;persons&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;En esta vista estamos haciendo varias cosas. Primero, estamos importando nuestro modelo, &lt;code&gt;Person&lt;/code&gt;, y &lt;code&gt;render&lt;/code&gt;, que nos va a formatear el contexto en una plantilla HTML.&lt;/p&gt;
&lt;p&gt;Luego, en nuestra función &lt;code&gt;index&lt;/code&gt;, hacemos una búsqueda en nuestra base de datos que nos devuelve a todas las personas. Es lo mismo que hacer un SQL:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;Person&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Y por último, retornamos &lt;code&gt;render&lt;/code&gt; con el nombre de nuestro template (&lt;code&gt;index.html&lt;/code&gt;) y nuestro diccionario (&lt;code&gt;{'persons' : persons}&lt;/code&gt;). Más adelante veremos cómo funcionan las vistas en conjunto con los templates.&lt;/p&gt;
&lt;p&gt;Para saber mejor cómo funcionan las vistas, te recomiendo &lt;a class="reference external" href="https://docs.djangoproject.com/en/1.8/topics/http/views/"&gt;esta página&lt;/a&gt; (en inglés)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="url-s"&gt;
&lt;h2&gt;URL's&lt;/h2&gt;
&lt;p&gt;El concepto del URL es básico. ¿Cómo un usuario va a llegar a nuestra flamante y nueva aplicación, si no tienen cómo hacerlo? Aquí es donde llegan las URL. Las URL no son más que la dirección de las páginas de la aplicación. Cada una de las vistas de nuestra aplicación debe tener una URL para que puedan ser accedidas. Por ejemplo, &lt;code&gt;www.miaplicacionweb.com/app-test&lt;/code&gt;. Para definir nuestras URL's, tenemos que crear un archivo para colocarlas. En &lt;code&gt;tests/app_test/&lt;/code&gt; vamos a crear un archivo que se llame &lt;code&gt;urls.py&lt;/code&gt; y vamos a añadir lo siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf.urls&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;patterns&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;app_test&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;views&lt;/span&gt;

&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;patterns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;^index$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;

    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Aquí me voy a detener un poco.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Primero, importamos &lt;code&gt;patterns&lt;/code&gt; y &lt;code&gt;url&lt;/code&gt;, que son necesarios para la creación de URL's, y nuestras vistas.&lt;/li&gt;
&lt;li&gt;Luego, creamos nuestros patterns. Cada pattern se compone por un &lt;code&gt;url&lt;/code&gt;, que a su vez se compone por:&lt;ul&gt;
&lt;li&gt;Una expresión regular que dice cual es la dirección de la URL. En nuestro caso es &amp;quot;index&amp;quot;&lt;/li&gt;
&lt;li&gt;La vista que representa&lt;/li&gt;
&lt;li&gt;El nombre para identificar la URL&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Luego de registrar los URL de la app, hay que registrar los URL del proyecto. En &lt;code&gt;tests/urls.py&lt;/code&gt; vamos a modificar lo siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf.urls&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;admin&lt;/span&gt;

&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;^admin/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;^&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;app_test.urls&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="c"&gt;# &amp;lt;----- Agregar esta linea!&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Siguiendo la misma lógica del anterior, el url se compone por:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Una expresión regular que dice cual es la dirección de la URL. En esta caso es ''.&lt;/li&gt;
&lt;li&gt;Un include de nuestro archivo de URL's en la aplicación &lt;code&gt;app_test&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ya que tenemos nuestros URL's configurados, podemos acceder a nuestra vista desde el navegador. Para saber más sobre URL's, puedes investigar en &lt;a class="reference external" href="https://docs.djangoproject.com/en/1.8/topics/http/urls/"&gt;este enlace&lt;/a&gt; (en inglés)&lt;/p&gt;
&lt;p&gt;Solo falta el template para poder renderizar lo que queremos.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="templates"&gt;
&lt;h2&gt;Templates&lt;/h2&gt;
&lt;p&gt;Llegamos a la última parte de este tutorial. Los templates son los archivos &lt;code&gt;.html&lt;/code&gt; que se van a visualizar en el navegador. Simple, ¿no?. Para generar contenido dinámico, Django hace uso del lenguaje de templates &lt;a class="reference external" href="http://jinja.pocoo.org/docs/dev/"&gt;Jinja2&lt;/a&gt;. En nuestro directorio &lt;code&gt;app_test/&lt;/code&gt; vamos a crear una carpeta que se llame &amp;quot;templates&amp;quot; y otra que se llame &amp;quot;static&amp;quot;. En &amp;quot;templates&amp;quot; vamos a crear un archivo que se llame &lt;code&gt;index.html&lt;/code&gt; y vamos a agregar lo siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Test page&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hola mundo!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;table&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;thead&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Nombre&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Teléfonos&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Email&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Dirección&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/thead&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;tbody&amp;gt;&lt;/span&gt;
    {% for person in persons %}
    &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;{{ person.name }}&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;{{ person.phone_num }}&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;{{ person.email }}&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;{{ person.address }}&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
    {% endfor %}
    &lt;span class="nt"&gt;&amp;lt;/tbody&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Para probar todo lo que llevamos, debemos aplicar las migraciones, crear la base de datos y correr el servidor de pruebas.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;(&lt;/span&gt;env&lt;span class="o"&gt;)&lt;/span&gt;../app_test&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ..
&lt;span class="o"&gt;(&lt;/span&gt;env&lt;span class="o"&gt;)&lt;/span&gt;../proyecto/tests&lt;span class="nv"&gt;$ &lt;/span&gt;python manage.py makemigrations app_test

&lt;span class="c"&gt;# Se generan las migraciones&lt;/span&gt;

&lt;span class="o"&gt;(&lt;/span&gt;env&lt;span class="o"&gt;)&lt;/span&gt;../proyecto/tests&lt;span class="nv"&gt;$ &lt;/span&gt;python manage.py migrate

&lt;span class="c"&gt;# Se crea la base de datos&lt;/span&gt;

&lt;span class="o"&gt;(&lt;/span&gt;env&lt;span class="o"&gt;)&lt;/span&gt;../proyecto/tests&lt;span class="nv"&gt;$ &lt;/span&gt;python manage.py createsuperuser

&lt;span class="c"&gt;# Se crea el superusuario, lo usaremos en el siguiente paso del tutorial&lt;/span&gt;

&lt;span class="o"&gt;(&lt;/span&gt;env&lt;span class="o"&gt;)&lt;/span&gt;../proyecto/tests&lt;span class="nv"&gt;$ &lt;/span&gt;python manage.py runserver

System check identified no issues &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; silenced&lt;span class="o"&gt;)&lt;/span&gt;.
November 10, &lt;span class="m"&gt;2015&lt;/span&gt; - 12:32:06
Django version 1.8.6, using settings &lt;span class="s1"&gt;&amp;#39;tests.settings&amp;#39;&lt;/span&gt;
Starting development server at http://127.0.0.1:8000/
Quit the server with CONTROL-C.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Si entramos en la dirección &lt;code&gt;localhost:8000/index&lt;/code&gt; o &lt;code&gt;http://127.0.0.1:8000/index&lt;/code&gt;, vamos a ver que todo está funcionando correctamente.&lt;/p&gt;
&lt;img alt="Aplicación funcionando" src="http://rogerandresgonzalez.com.ve/es/../images/django_tutorial/hello_world.png" /&gt;
&lt;p&gt;Tu proyecto ya debería de verse &lt;a class="reference external" href="https://github.com/Rogergonzalez21/django-tutorial/tree/188e15c3058ffd9b7004e880447e6b2146bdf08d"&gt;así&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Por ahora todo es muy básico, tenemos un modelo que guarda personas, una vista que devuelve una lista de personas, y un template para mostrar esa vista. En la tercera parte del tutorial vamos a aprender a hacer un formulario para añadir datos, y cómo usar el &lt;a class="reference external" href="https://docs.djangoproject.com/en/1.8/ref/contrib/admin/"&gt;administrador de Django&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Hasta la próxima.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://rogerandresgonzalez.com.ve/es/2015/10/como-configurar-tu-primer-proyecto-de-django-parte-I/"&gt;Parte 1: Preparando nuestro proyecto de Django&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://rogerandresgonzalez.com.ve/es/2015/11/como-configurar-tu-primer-proyecto-de-django-parte-III/"&gt;Parte 3: Django Admin y Formularios&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary><category term="django"></category><category term="python"></category></entry><entry><title>¿Cómo descargar automáticamente de un FTP usando wget y cron?</title><link href="http://rogerandresgonzalez.com.ve/es/2015/10/descargar-ftp-usando-wget-y-cron/" rel="alternate"></link><updated>2015-10-30T16:10:00-05:30</updated><author><name>Roger González</name></author><id>tag:rogerandresgonzalez.com.ve,2015-10-30:es/2015/10/descargar-ftp-usando-wget-y-cron/</id><summary type="html">&lt;p&gt;Hace unos días me mandaron a configurar una PC prehistorica para hacer respaldos automáticos de un servidor web. Una antigua Intel Dual Core con 2GB de Ram y un HDD de 320GB (los respaldos no son tan pesados, 8GB a lo sumo).&lt;/p&gt;
&lt;p&gt;Lo mejor del proyecto: Me dieron total libertad. Por eso, decidí instalar &lt;a class="reference external" href="http://lubuntu.net/"&gt;Lubuntu 15.10&lt;/a&gt; (recien salido del horno) en contra del equipo de Windowseros TI que hay en la empresa.&lt;/p&gt;
&lt;p&gt;Ya que la PC tenía Lubuntu, me dispuse a buscar opciones para descargar por FTP, y me consigo con wget, la herramienta de descargas que viene preinstalada en todas las distro Debian-based.&lt;/p&gt;
&lt;div class="section" id="que-es-wget"&gt;
&lt;h2&gt;¿Qué es wget?&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://es.wikipedia.org/wiki/GNU_Wget"&gt;wget&lt;/a&gt; es una herramienta libre que permite la descarga de contenidos desde servidores web de una forma simple. Se caracteriza por ser muy &lt;strong&gt;robusta&lt;/strong&gt; desde su lanzamiento en 1996 (justo en el boom de popularidad de la web).&lt;/p&gt;
&lt;p&gt;¡Ya tengo la herramienta para hacer los backups! y lo mejor es que &lt;strong&gt;viene incluida en la distribución&lt;/strong&gt;, por lo que no tengo que instalar paquetes externos.&lt;/p&gt;
&lt;p&gt;Ahora, para programar las descargas me propuse usar &lt;strong&gt;cron&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="que-es-cron"&gt;
&lt;h2&gt;¿Qué es cron?&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://es.wikipedia.org/wiki/Cron_%28Unix%29"&gt;cron&lt;/a&gt; es un &lt;a class="reference external" href="https://es.wikipedia.org/wiki/Demonio_%28inform%C3%A1tica%29"&gt;demonio&lt;/a&gt; que ejecuta procesos o &lt;a class="reference external" href="https://es.wikipedia.org/wiki/Script"&gt;scripts&lt;/a&gt; a cierto minuto, hora, dia, semana o mes.&lt;/p&gt;
&lt;p&gt;Ya que sabía lo que tenía que hacer, solo faltaba ponerme manos a la obra.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="manos-a-la-obra"&gt;
&lt;h2&gt;Manos a la obra&lt;/h2&gt;
&lt;p&gt;Primero, tenía que crear el script de &lt;a class="reference external" href="https://es.wikipedia.org/wiki/Bash"&gt;bash&lt;/a&gt; &lt;code&gt;(.sh)&lt;/code&gt; que se iba a ejecutar. El script tiene que:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Acceder a la carpeta de backups&lt;/li&gt;
&lt;li&gt;Crear una carpeta con la fecha del día del backup&lt;/li&gt;
&lt;li&gt;Descargar todo del FTP&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ok, ¡Empecemos!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#! /bin/bash&lt;/span&gt;

&lt;span class="nv"&gt;today&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;date +&lt;span class="s2"&gt;&amp;quot;%d_%m_%Y&amp;quot;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;

&lt;span class="nb"&gt;cd&lt;/span&gt; ~/backups
mkdir &lt;span class="nv"&gt;$today&lt;/span&gt;

&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$today&lt;/span&gt;
user@pc:~&lt;span class="nv"&gt;$ &lt;/span&gt;mailx -s &lt;span class="s2"&gt;&amp;quot;¡Backup comenzado!&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;correo_destinatario@servidor.com&amp;quot;&lt;/span&gt; &amp;lt; /dev/null
wget --timeout &lt;span class="m"&gt;20&lt;/span&gt; -m -nH --user &lt;span class="s2"&gt;&amp;quot;ftpuser&amp;quot;&lt;/span&gt; --password &lt;span class="s2"&gt;&amp;quot;ftppassword&amp;quot;&lt;/span&gt; ftp://ftpserver.com
user@pc:~&lt;span class="nv"&gt;$ &lt;/span&gt;mailx -s &lt;span class="s2"&gt;&amp;quot;¡Backup terminado!&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;correo_destinatario@servidor.com&amp;quot;&lt;/span&gt; &amp;lt; /dev/null
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;¡No te asustes! Voy a explicar paso a paso lo que hace cada uno de los comandos.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;code&gt;#! /bin/bash&lt;/code&gt;: Sirve para indicar que lo que viene es un script de bash.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;today=`date +&amp;quot;%d_%m_%Y&amp;quot;`&lt;/code&gt;: Guarda la fecha de hoy, en formato 'dia_mes_Año', en la variable 'today'.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd ~/backups&lt;/code&gt;:  Entra a una carpeta llamada 'backups', que voy a crear más adelante.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mkdir $today&lt;/code&gt;: Crea una carpeta con el día de hoy ('dia_mes_Año').&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd $today&lt;/code&gt;: Accede a la carpeta creada.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mailx -s&lt;/code&gt;: mailx es un programa que se usa para mandar correos. En &lt;a class="reference external" href="http://rogerandresgonzalez.com.ve/es/2015/10/enviar-un-mail-con-mailx/"&gt;esta&lt;/a&gt; entrada puedes saber mas de eso.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Aquí me voy a detener un poco y explicar pausadamente.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;code&gt;wget --timeout 20 -m -nh&lt;/code&gt;: Ejecuta wget con los parámetros:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--timeout 20&lt;/code&gt;, para que reintente luego de 20 segundos de inactividad.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m&lt;/code&gt; para especificar que está haciendo un mirror.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-nH&lt;/code&gt;, que especifica que no cree una subcarpeta, sino que descargue todo en donde está.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--user &amp;quot;ftpuser&amp;quot; --password &amp;quot;ftppassword&amp;quot; ftp://ftpserver.com&lt;/code&gt;: Son los datos de conexión de nuestro FTP. Debemos reemplazar cada uno de los campos con nuestros propios datos.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="ya-que-tenemos-nuestro-script-configuremos-cron"&gt;
&lt;h2&gt;Ya que tenemos nuestro script, configuremos cron&lt;/h2&gt;
&lt;p&gt;La configuración de cron es muchisimo mas sencilla. En nuestro terminal colocamos:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;crontab -e
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(Aveces advierte que no tienes un editor predeterminado. Elegimos 'nano' o el de nuestra preferencia).&lt;/p&gt;
&lt;p&gt;Se va a abrir nuestro archivo crontab. Si vamos a la última parte, veremos que podemos agregar nuevas instrucciones.&lt;/p&gt;
&lt;p&gt;Los formatos de las instrucciones de crontab son las siguientes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;a b c d e /ruta/del/script.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Donde:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a = minuto (0-59)&lt;/li&gt;
&lt;li&gt;b = hora (0-23, 0 = medianoche)&lt;/li&gt;
&lt;li&gt;c = dia (1-31)&lt;/li&gt;
&lt;li&gt;d = mes (1-12)&lt;/li&gt;
&lt;li&gt;e = dia de la semana (0,6, 0 = domingo)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;También podemos colocar '*' en día, mes y día de la semana, para especificar &amp;quot;cualquiera&amp;quot;.&lt;/p&gt;
&lt;p&gt;Con esta información, construí mi crontab:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="m"&gt;30&lt;/span&gt; &lt;span class="m"&gt;17&lt;/span&gt; * * 2,4 /scripts/backup.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;El script será ejecutado cada &lt;strong&gt;martes&lt;/strong&gt; y &lt;strong&gt;jueves&lt;/strong&gt;, a las &lt;strong&gt;5:30PM&lt;/strong&gt;. &lt;a class="reference external" href="https://help.ubuntu.com/community/CronHowto"&gt;Aquí&lt;/a&gt; tienes más información para crear tus propios cron.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusión&lt;/h2&gt;
&lt;p&gt;wget y cron son herramientas poderosas que vienen con nuestros sistemas operativos Linux, que con los conocimientos correctos pueden ser nuestras mejores amigas.&lt;/p&gt;
&lt;p&gt;cron puede ser usado para muchas cosas de automatización, y wget tiene muchísimas más opciones además de descargar de un FTP. Te invito a leer cada uno de sus manuales (&lt;code&gt;man wget&lt;/code&gt; y &lt;code&gt;man cron&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Hasta la próxima.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="wget"></category><category term="cron"></category><category term="ftp"></category><category term="descargar"></category><category term="script"></category><category term="bash"></category><category term="tutorial"></category></entry><entry><title>¿Cómo enviar un mail desde el terminal con mailx?</title><link href="http://rogerandresgonzalez.com.ve/es/2015/10/enviar-un-mail-con-mailx/" rel="alternate"></link><updated>2015-10-30T15:59:00-05:30</updated><author><name>Roger González</name></author><id>tag:rogerandresgonzalez.com.ve,2015-10-30:es/2015/10/enviar-un-mail-con-mailx/</id><summary type="html">&lt;p&gt;Hoy vengo con un tutorial un poco más corto y directo al grano. &lt;strong&gt;¿Cómo envío un correo por bash?&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;La respuesta, mailx&lt;/p&gt;
&lt;div class="section" id="que-es-mailx"&gt;
&lt;h2&gt;¿Qué es mailx?&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://es.wikipedia.org/wiki/Mailx"&gt;mailx&lt;/a&gt; es un programa para enviar y recibir correo. También, es una versión mejorada de 'mail' en Unix. &lt;strong&gt;mailx&lt;/strong&gt; es una herramienta muy útil para mandar correos por bash, ya que podemos &lt;strong&gt;usarlo en un script&lt;/strong&gt; &lt;code&gt;.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Su instalación es muy sencilla:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;user@pc:~&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install mailutils

&lt;span class="c"&gt;# Cuando nos salga una ventana preguntando la configuración, seleccionamos la segunda&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ya que tenemos mailx instalado, podemos hacer uso de ella.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="primeros-pasos-con-mailx"&gt;
&lt;h2&gt;Primeros pasos con mailx&lt;/h2&gt;
&lt;p&gt;mailx es muy sencillo de utilizar. Podemos hacerlo de esta forma:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;user@pc:~&lt;span class="nv"&gt;$ &lt;/span&gt;mailx -s &lt;span class="s2"&gt;&amp;quot;Asunto del mail&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;correo_destinatario@servidor.com&amp;quot;&lt;/span&gt;
Cc: correo_de_copia@servidor.com
Hola! Soy un correo de mailx!

&lt;span class="c"&gt;# Presionamos Cntrl + D para enviar el correo&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="que-pasa-aqui"&gt;
&lt;h3&gt;¿Qué pasa aquí?&lt;/h3&gt;
&lt;p&gt;Primero, estamos ejecutando &lt;code&gt;mailx&lt;/code&gt; con el parámetro &lt;code&gt;-s&lt;/code&gt;, que permite añadir un asunto al mail (&amp;quot;Asunto del mail&amp;quot;), y por último, el correo destinatario (&amp;quot;&lt;a class="reference external" href="mailto:correo_destinatario&amp;#64;servidor.com"&gt;correo_destinatario&amp;#64;servidor.com&lt;/a&gt;&amp;quot;).&lt;/p&gt;
&lt;p&gt;Cuando presionamos enter, mailx nos da opciones de agregar un 'Cc' (Con copia) y el cuerpo del correo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pero-esto-no-es-muy-automatico-como-puedo-usarlo-en-un-script"&gt;
&lt;h3&gt;Pero esto no es muy automático... ¿Cómo puedo usarlo en un script?&lt;/h3&gt;
&lt;p&gt;Hay muchas formas de usarlo en un script, pero yo uso solo 2.&lt;/p&gt;
&lt;p&gt;La primera, solo envía un correo con &amp;quot;Asunto&amp;quot;, pero sin cuerpo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;user@pc:~&lt;span class="nv"&gt;$ &lt;/span&gt;mailx -s &lt;span class="s2"&gt;&amp;quot;Asunto del mail&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;correo_destinatario@servidor.com&amp;quot;&lt;/span&gt; &amp;lt; /dev/null
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Esta ejecución de mailx nos va a enviar un correo con asunto &amp;quot;Asunto del mail&amp;quot;. Así de sencillo.&lt;/p&gt;
&lt;p&gt;Si queremos que nos mande un correo con asunto y cuerpo, podemos usar:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;user@pc:~&lt;span class="nv"&gt;$ &lt;/span&gt;mailx -s &lt;span class="s2"&gt;&amp;quot;Asunto del mail&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;correo_destinatario@servidor.com&amp;quot;&lt;/span&gt; &amp;lt; cuerpo-del-mensaje.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Dónde 'cuerpo-del-mensaje.txt' sea un archivo de texto plano que contenga el mensaje que quieres que sea enviado.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="eso-es-todo"&gt;
&lt;h2&gt;¡Eso es todo!&lt;/h2&gt;
&lt;p&gt;Usar mailx es muy util para multiples cosas. Yo lo uso cuando programo un &lt;a class="reference external" href="http://rogerandresgonzalez.com.ve/es/2015/10/descargar-ftp-usando-wget-y-cron/"&gt;script con cron&lt;/a&gt; y &lt;strong&gt;quiero que me avise cuando se ejecute y cuando termine&lt;/strong&gt;. ¿Para qué lo usarías tu?&lt;/p&gt;
&lt;p&gt;Hasta la próxima.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="mail"></category><category term="mailx"></category><category term="bash"></category><category term="script"></category><category term="tutorial"></category></entry><entry><title>¿Cómo configurar tu primer proyecto de Django? Parte I</title><link href="http://rogerandresgonzalez.com.ve/es/2015/10/como-configurar-tu-primer-proyecto-de-django-parte-I/" rel="alternate"></link><updated>2015-10-25T19:08:00-05:30</updated><author><name>Roger González</name></author><id>tag:rogerandresgonzalez.com.ve,2015-10-25:es/2015/10/como-configurar-tu-primer-proyecto-de-django-parte-I/</id><summary type="html">&lt;p&gt;Es hora de hacer tu primera aplicación web. En este pequeño tutorial, te voy a enseñar a configurar tu primera aplicación con Django.&lt;/p&gt;
&lt;div class="section" id="primero-que-demonios-es-django"&gt;
&lt;h2&gt;Primero, ¿Qué demonios es Django?&lt;/h2&gt;
&lt;div class="figure"&gt;
&lt;img alt="Django" src="http://rogerandresgonzalez.com.ve/es/../images/django_tutorial/django.png" /&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;- Django.&lt;/em&gt;
&lt;em&gt;- Can you spell it?&lt;/em&gt;
&lt;em&gt;- D-J-A-N-G-O. The 'D' is silent.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt; es un framework web hecho completamente en Python, escalable, que ayuda a un desarrollo rápido de aplicaciones web.&lt;/p&gt;
&lt;p&gt;Funciona con el lenguaje de programación &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt;, que es muy sencillo de aprender. Aquí tienes un &lt;a class="reference external" href="https://www.codecademy.com/es/tracks/python"&gt;tutorial&lt;/a&gt; muy completo y entendible.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="y-que-paginas-web-utilizan-django"&gt;
&lt;h2&gt;¿Y qué páginas web utilizan Django?&lt;/h2&gt;
&lt;p&gt;Buena pregunta, mi querido Padawan. Aquí te muestro 3 aplicaciones grandes que usan Django:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://disqus.com/home/explore/"&gt;Disqus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;a class="reference external image-reference" href="https://disqus.com/home/explore/"&gt;&lt;img alt="Disqus" src="http://rogerandresgonzalez.com.ve/es/../images/django_tutorial/disqus.png" /&gt;&lt;/a&gt;
&lt;p&gt;Si, la popular aplicación de comentarios, usada por millones de personas (¡Incluso en este sitio!), funciona con Django.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://instagram.com/"&gt;Instagram&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;a class="reference external image-reference" href="https://instagram.com/"&gt;&lt;img alt="Instagram" src="http://rogerandresgonzalez.com.ve/es/../images/django_tutorial/instagram.png" /&gt;&lt;/a&gt;
&lt;p&gt;El sitio superpopular de compartir fotos también está hecho en Django.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://pinterest.com/"&gt;Pinterest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;a class="reference external image-reference" href="https://pinterest.com/"&gt;&lt;img alt="Pinterest" src="http://rogerandresgonzalez.com.ve/es/../images/django_tutorial/pinterest.png" /&gt;&lt;/a&gt;
&lt;p&gt;Django es popular entre los sitios de imágenes, porque provee todas las herramientas que se necesitan para &lt;strong&gt;escalar&lt;/strong&gt; y soportar miles de vistas inmediatas de contenido.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://codecondo.com/popular-websites-django/"&gt;Aquí&lt;/a&gt; tienes más páginas hechas con Django.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="convencido-entonces-comencemos-instalando-los-paquetes-requeridos"&gt;
&lt;h2&gt;¿Convencido? Entonces comencemos instalando los paquetes requeridos.&lt;/h2&gt;
&lt;p&gt;Voy a asumir que estás usando Ubuntu Linux. Si tienes la última versión, ya tienes Python instalado.&lt;/p&gt;
&lt;p&gt;Primero, tienes que instalar los paquetes de desarrollo, el &lt;a class="reference external" href="https://virtualenv.pypa.io/en/latest/"&gt;virtual environment&lt;/a&gt; y &lt;a class="reference external" href="https://es.wikipedia.org/wiki/Pip_%28administrador_de_paquetes%29"&gt;pip&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;user@pc:~&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install python-dev virtualenv python-pip
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Estos son todos los paquetes que necesitaremos para la instalación de nuestra primera aplicación de Django.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="iniciando-la-aplicacion"&gt;
&lt;h2&gt;Iniciando la aplicación&lt;/h2&gt;
&lt;p&gt;Crea un nuevo directorio, vamos a llamarlo &lt;code&gt;proyecto&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;user@pc:~&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir proyecto
user@pc:~&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;proyecto
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Dentro de &lt;code&gt;proyecto&lt;/code&gt; vamos a iniciar nuestro primer entorno virtual de desarrollo (virtualenv). &lt;strong&gt;¿Por qué necesitamos un virtualenv?&lt;/strong&gt; Porque cada proyecto puede tener sus propios paquetes con sus propias versiones. Es una buena práctica instalar los paquetes localmente en un entorno virtual por proyecto.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;user@pc:~/proyecto&lt;span class="nv"&gt;$ &lt;/span&gt;virtualenv env
New python executable in env/bin/python
&lt;span class="c"&gt;# Se ejecutará la instalación de tu virtualenv&lt;/span&gt;

user@pc:~/proyecto&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source &lt;/span&gt;env/bin/activate
&lt;span class="o"&gt;(&lt;/span&gt;env&lt;span class="o"&gt;)&lt;/span&gt;user@pc:~/proyecto&lt;span class="err"&gt;$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ya estamos dentro de nuestro virtualenv (¿Ven como bash cambió el comienzo de nuestra línea? ahora comienza con &lt;code&gt;env&lt;/code&gt;). Igual, podemos revisar qué versión de Python estamos usando si escribimos en nuestro terminal &lt;code&gt;which python&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;(&lt;/span&gt;env&lt;span class="o"&gt;)&lt;/span&gt;user@pc:~/proyecto&lt;span class="nv"&gt;$ &lt;/span&gt;which python
/home/user/proyecto/env/bin/python
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ahora, ¡A instalar Django!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;(&lt;/span&gt;env&lt;span class="o"&gt;)&lt;/span&gt;user@pc:~/proyecto&lt;span class="nv"&gt;$ &lt;/span&gt;pip install django
Collecting django
...
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="espera-espera-que-esta-pasando-aqui"&gt;
&lt;h2&gt;Espera, espera. ¿Qué está pasando aquí?&lt;/h2&gt;
&lt;p&gt;Usando el administrador de paquetes de Python, &lt;code&gt;pip&lt;/code&gt; instalamos los paquetes &lt;strong&gt;directamente en nuestro virtualenv&lt;/strong&gt;, así no necesitamos el uso de &lt;code&gt;sudo&lt;/code&gt;, porque no lo vamos a instalar como un paquete global.&lt;/p&gt;
&lt;p&gt;Luego de que instalamos Django, podemos ejecutar el creador de aplicaciones automático de Django. Vamos a crear un proyecto que se llame &lt;code&gt;tests&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;(&lt;/span&gt;env&lt;span class="o"&gt;)&lt;/span&gt;user@pc:~/proyecto&lt;span class="nv"&gt;$ &lt;/span&gt;django-admin.py startproject tests

&lt;span class="c"&gt;# Revisamos si todo fué creado correctamente&lt;/span&gt;

&lt;span class="o"&gt;(&lt;/span&gt;env&lt;span class="o"&gt;)&lt;/span&gt;user@pc:~/proyecto&lt;span class="nv"&gt;$ &lt;/span&gt;ls
env/ tests/

&lt;span class="c"&gt;# Accedemos a &amp;#39;tests&amp;#39;&lt;/span&gt;

&lt;span class="o"&gt;(&lt;/span&gt;env&lt;span class="o"&gt;)&lt;/span&gt;user@pc:~/proyecto&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;tests
&lt;span class="o"&gt;(&lt;/span&gt;env&lt;span class="o"&gt;)&lt;/span&gt;user@pc:~/proyecto/tests&lt;span class="err"&gt;$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Dentro de &lt;code&gt;tests&lt;/code&gt; vive nuestro proyecto de Django.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="prueba-final-redobles-por-favor"&gt;
&lt;h2&gt;Prueba final. Redobles por favor&lt;/h2&gt;
&lt;p&gt;Ejecutemos el servidor de Django para revisar que todo esté correcto.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;(&lt;/span&gt;env&lt;span class="o"&gt;)&lt;/span&gt;user@pc:~/proyecto/tests&lt;span class="nv"&gt;$ &lt;/span&gt;python manage.py runserver

&lt;span class="c"&gt;# Quizá aparezcan unos errores, es normal&lt;/span&gt;

Starting development server at http://127.0.0.1:8000/
Quit the server with CONTROL-C.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Si entramos en nuestro navegador a la dirección &lt;code&gt;http://127.0.0.1:8000/&lt;/code&gt;, nos saldrá este bello mensaje:&lt;/p&gt;
&lt;img alt="Django" src="http://rogerandresgonzalez.com.ve/es/../images/django_tutorial/it_worked.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="funciono-aplausos-para-ti"&gt;
&lt;h2&gt;¡Funcionó! ¡Aplausos para tí!&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/Rogergonzalez21/django-tutorial/tree/4fe1d18891dbd3d6da202a906fb064bfba357b8b"&gt;Así&lt;/a&gt; debería de verse tu proyecto ahora.&lt;/p&gt;
&lt;p&gt;Igualmente, esto no es todo. Solo hemos configurado tu primer proyecto. Aún faltan crear tu aplicación, sus vistas, modelos, templates y por último, aprender a hacer el deployment... Pero no te asustes, todo lo cubriremos más adelante.&lt;/p&gt;
&lt;p&gt;Mientras tanto, ¡Hasta la próxima!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://rogerandresgonzalez.com.ve/es/2015/11/como-configurar-tu-primer-proyecto-de-django-parte-II/"&gt;Parte 2: Aplicación, Vistas, Modelos, Templates y URLS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://rogerandresgonzalez.com.ve/es/2015/11/como-configurar-tu-primer-proyecto-de-django-parte-III/"&gt;Parte 3: Django Admin y Formularios&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary><category term="django"></category><category term="python"></category></entry></feed>